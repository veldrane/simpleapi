// Code generated by goa v3.2.5, DO NOT EDIT.
//
// failures views
//
// Command:
// $ goa gen simpleapi/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// TimeOutRate is the viewed result type that is projected based on a view.
type TimeOutRate struct {
	// Type to project
	Projected *TimeOutRateView
	// View to render
	View string
}

// TimeOutRateView is a type that runs validations on a projected type.
type TimeOutRateView struct {
	// rate ot the timeouts in percent
	Timeoutrate *int
}

var (
	// TimeOutRateMap is a map of attribute names in result type TimeOutRate
	// indexed by view name.
	TimeOutRateMap = map[string][]string{
		"default": []string{
			"timeoutrate",
		},
	}
)

// ValidateTimeOutRate runs the validations defined on the viewed result type
// TimeOutRate.
func ValidateTimeOutRate(result *TimeOutRate) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateTimeOutRateView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateTimeOutRateView runs the validations defined on TimeOutRateView
// using the "default" view.
func ValidateTimeOutRateView(result *TimeOutRateView) (err error) {

	return
}
