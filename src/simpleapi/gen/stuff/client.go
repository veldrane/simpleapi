// Code generated by goa v3.2.5, DO NOT EDIT.
//
// stuff client
//
// Command:
// $ goa gen simpleapi/design

package stuff

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "stuff" service client.
type Client struct {
	ListEndpoint goa.Endpoint
	AddEndpoint  goa.Endpoint
	ShowEndpoint goa.Endpoint
}

// NewClient initializes a "stuff" service client given the endpoints.
func NewClient(list, add, show goa.Endpoint) *Client {
	return &Client{
		ListEndpoint: list,
		AddEndpoint:  add,
		ShowEndpoint: show,
	}
}

// List calls the "list" endpoint of the "stuff" service.
func (c *Client) List(ctx context.Context) (res StoredArticleCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(StoredArticleCollection), nil
}

// Add calls the "Add" endpoint of the "stuff" service.
func (c *Client) Add(ctx context.Context, p *AddPayload) (err error) {
	_, err = c.AddEndpoint(ctx, p)
	return
}

// Show calls the "show" endpoint of the "stuff" service.
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *StoredArticle, err error) {
	var ires interface{}
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*StoredArticle), nil
}
